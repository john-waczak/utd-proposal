---
title: "Physical Sensing and Physics-based Machine Learning for Actionable Environmental Insights"
author: "John Waczak"
date: today
format:
    revealjs:
        slide-number: true
        theme: default
        margin: 0.05
bibliography: references.bib
---

## {.smaller}

:::: {.columns}
::: {.column width="50%"}
::: {style="font-size: 75%;"}
**Papers I've Contributed To:**

1. [Autonomous learning of new environments with a robotic team employing hyper-spectral remote sensing, comprehensive in-situ sensing and machine learning](https://www.mdpi.com/1424-8220/21/6/2240/pdf)
2. [Decoding Physical and Cognitive Impacts of Particulate Matter Concentrations at Ultra-Fine Scales](https://www.mdpi.com/1424-8220/22/11/4240)
3. [Data-Driven EEG Band Discovery with Decision Trees](https://www.mdpi.com/1424-8220/22/8/3048)
4. [Unsupervised Blink Detection Using Eye Aspect Ratio Values](https://www.preprints.org/manuscript/202203.0200/download/final_file)


**Code Repositories Created:**

1. [RobotTeam.jl](https://github.com/john-waczak/RobotTeam.jl)
2. [SelfOrganizingMaps.jl](https://github.com/john-waczak/SelfOrganizingMaps.jl/tree/main/docs/src)
3. [GenerativeTopographicMapping.jl](https://github.com/john-waczak/GenerativeTopographicMapping.jl/tree/main/notes)
4. [MLJGaussianProcesses.jl](https://github.com/john-waczak/MLJGaussianProcesses.jl/tree/main/src)
5. [TimeSeriesTools.jl](https://github.com/john-waczak/TimeSeriesTools.jl)
6. [AutoChem.jl](https://github.com/john-waczak/AutoChem.jl)
7. [Photolysis.jl](https://github.com/john-waczak/Photolysis.jl/tree/613c749cc2cb39002836531fcd38ab58057dd9f2)


:::
:::
::: {.column width="50%"}

::: {style="font-size: 75%;"}
**Papers in Progress (working titles):**

1. Processing Pushbroom Hyperspectral Imagery for Real-time Application by an Autonomous Robotic Team
2. Rapid quantification of chemical concentrations by an autonomous robotic team using ensemble learning with conformal prediction
3. Time Series Methods for Uncertainty Quantification of IoT and Biometric Sensors
4. Time Series Modeling of Particulate Matter Employing a Hybrid HAVOK-UDE Approach
5. Comprehensively Calculating Indoor Photolysis Rates
6. Development of a chemical data assimilation framework for indoor air quality assessment

**Datasets generated**

1. [Robot Team Imagery](https://ncsa.osn.xsede.org/ees230012-bucket01/RobotTeam/)
2. [Air Quality Network Data](https://ncsa.osn.xsede.org/ees230012-bucket01/AirQualityNetwork/)
3. [Photolysis Reference Data](https://ncsa.osn.xsede.org/ees230012-bucket01/ReferenceData/Photolysis/)

:::
:::
::::

::: {.notes}
applied physics project entitled "..."
:::


# Motivation

## Global Change, Air Quality, and the Need for Physical Sensing

::: {.fragment .fade-in}
![](./assets/motivation/hurricanes.png){.absolute top="150" left="-30" width="400" }
![](./assets/motivation/ecmwf-report.png){.absolute top="150" left="600" width="400" }
:::

::: {.fragment .fade-in}
![](./assets/motivation/typhoon-article.png){.absolute top="200" left="630" width="400" }
:::

::: {.fragment .fade-in}
![](./assets/motivation/maui-article-1.png){.absolute top="250" left="0" width="400" }
![](./assets/motivation/canada-article-2.png){.absolute top="250" left="660" width="400" }
:::

::: {.fragment .fade-in}
![](./assets/motivation/canada-article-1.png){.absolute top="350" left="30" width="400" }
:::

::: {.fragment .fade-in}
![](./assets/motivation/palestine-article-1.png){.absolute top="450" left="60" width="400" }
![](./assets/motivation/palestine-article-2.png){.absolute top="450" left="690" width="400" }
:::


::: {.fragment .fade-in}
![](./assets/motivation/covid-article-2.png){.absolute top="550" left="90" width="400" }
![](./assets/motivation/covid-article-1.png){.absolute top="550" left="720" width="400" }
:::

::: {.notes}
In order to meet the challenges posed by the mounting impacts of global change and human actions on air quality we need to make data driven decisions. To make data driven decisions we need comprehensive physical sensing
:::

## {background-image="./assets/mints-ai.png" background-size="contain"}

::: {.notes}
MINTS-AI: multi-scale, multi-use, integrated, interactive, intelligent sensing and simulation for actionable insights
:::

## {background-image="./assets/mints-ai-highlighted.png" background-size="contain"}



## The Role of Machine Learning {.smaller}

::::{.columns}

::: {.column width="50%"}

::: {.fragment .fade-in}
![](./assets/motivation/dog-or-muffin.jpeg){.absolute top="150" left="0" width="500" }
:::

::: {.fragment .fade-in}
![](./assets/motivation/chatgpt-1.png){.absolute top="450" left="0" width="500" }
:::

:::

::: {.column width="50%"}
ML models have proven to be wildly successful for a variety of tasks such as

- Image classification/recognition
- Speech recognition
- Language translation
- Spam detection / "Smart" Advertising

Due to the diverse and abstract nature of many of these problems, many ML models act like *black boxes*. This is not ideal for scientific applications where the goal is to *both* make predictions *and* gain insight into the underlying physical reality.

:::
::::

## {.smaller}
### Physics-Based Machine Learning
:::: {.columns}

::: {.column width="50%"}
::: {style="font-size: 85%;"}

- The measurements we have are often only *indirectly* related to the quantities we want to estimate
- Our current physical models may be incomplete (i.e. missing physics)
- Physical models may have a limited domain of applicability (i.e. limited feature ranges)
- Many ML models behave as [universal approximators](https://www.sciencedirect.com/science/article/pii/0893608089900208)
- ML models uses data to overcome the [curse of dimensionality](https://stats.stackexchange.com/questions/186184/does-dimensionality-curse-effect-some-models-more-than-others#:~:text=Neural%20networks%20are%20weird%20in,to%20cover%20an%20input%20space.) with data
- Many ML models can be further constrained to obey physical symmetries & constraints
:::
:::

::: {.column width="50%"}


<!-- ![](./assets/motivation/ude-framework.png){.absolute top="0" left="0" width="600" } -->
![](./assets/motivation/ude-framework.png)

<!-- ![](./assets/motivation/ude-extrapolation.png){.absolute top="300" left="0" width="600" } -->

![](./assets/motivation/ude-extrapolation.png)

:::

::::


::: aside
Figures from [@ude-paper]
:::


## Outline of Proposed Work

:::: {.columns}

::: {.column width="33.3%"}
![](./assets/robot-team-table.png)
:::

::: {.column width="33.3%"}
![](./assets/air-quality-network-table.png)
:::

::: {.column width="33.3%"}
![](./assets/chemical-data-assimilation-table.png)
:::

::::




# Project 1: Robot Team {background-image="./assets/robot-team-deployment.png"}

## Guiding Question: *Is this area safe?* {.smaller}

:::: {.columns}
::: {.column width="50%"}
- Most remote sensing satellites consist of multi-band imagers
- Pixel resolutions tend to be large (10 - 60 meters for Sentinel 2)
- Locations are revisited infrequently (5 days for Sentinel 2)
- Massive data volume must be transferred & post-processed
- Visible imagery are easily occluded by clouds
- Insights limited by wavelength bands and availability of reference measurements at ground level

:::

::: {.column width="50%"}
![](./assets/robot-team/passbands.svg)
![](./assets/robot-team/resolution-comparison.png)

::: aside
Resolution comparison figure from [@resolution-comparison]
:::

:::
::::

## {background-image="./assets/robot-team/robotteam-1.png" background-size="contain"}

## Physical Sensing: Autonomous Drone {.smaller}

:::: {.columns}
::: {.column width="50%"}
- FreeFly Alta X Quadcopter
- Resonon Pika Hyperspectral Imager
  - 462 wavelength bands from 400 to 1000 nm
  - Embedded IMU/GPS
  - 1600 pixels per scanline, $30.8^{\circ}$ FOV
- Ocean Optics Flame-S Spectrometer
  - 2048 wavelength
  - 340-1024 nm
- Intel NUC 10i7FNK for real-time processing
:::
::: {.column width="50%"}
![](./assets/alta-x.gif){.absolute top="50" left="700" width="400" }
![](./assets/resonon-hsi.png){.absolute top="350" left="550" width="400" }
![](./assets/irradiance-spectrometer.png){.absolute top="450" left="850" width="250" }
:::
::::

## {background-image="./assets/robot-team/annotated-drone.svg" background-size="contain"}


## Physical Sensing: Autonomous Boat {.smaller}

:::: {.columns}
::: {.column width="55%"}
- Maritime Robotics Otter
  - 20 hr endurance
  - fully autonomous
- 3 Eureka Manta-40 Multi-Probes
  - Blue-Green Algae, Chlorophyll
  - Colored Dissolved Organic Matter
  - Total dissolved solids
  - Crude Oil, Refined Fuels, Tryptophan
  - Dissolved Oxygen & Total Dissolved Gas
  - Temperature, Turbidity
  - Ions: $\mathrm{NH_4^+}$, $\mathrm{Br^{-}}$, $\mathrm{Ca^{2+}}$, $\mathrm{Cl^{-}}$, $\mathrm{NO_3^{-}}$, $\mathrm{Na^{+}}$
  - ... and more
:::

::: {.column width="45%"}
![](./assets/robot-team/otter.png){.absolute top="100" width="400"}
![](./assets/robot-team/water-probes.jpg){.absolute top="400" width="400"}
:::
::::

## Real Time Processing/Georectification {.smaller}

:::: {.columns}
::: {.column width="50%"}

- Our HSI is a "pushbroom" camera which generates images one scanline at a time
- To use the sampled spectra, each pixel must be georeferenced to a local coordinate system
- We accomplish this using the onboard IMU/GPS together with a sequence of transformations
:::
::: {.column width="50%"}
![](./assets/robot-team/georectification.svg){.absolute width="700"}
![](./assets/robot-team/georectification-equations.png){.absolute top="450" left="-50" width="600"}
:::
::::

## {.smaller}

:::: {.columns}
::: {.column width="50%"}
- Once georeferenced, images are resampled to a regular grid at desired resolution
- To account for variability of incident light, the georectified datacube is then converted from Radiance to Reflectance
  - Uses sampled downwelling irradiance spectrum
  - Assumes surface exhibits Lambertian (diffuse) reflectance
- For a HSI of size $462\times 1600\times 1000$, full processing pipeline takes ~5s for a final resolution of 20 cm.
- HSI are typically configured to capture every 7-10 seconds
- On-board processing enables generation of data products in *real-time*
:::
::: {.column width="50%"}
![](./assets/robot-team/pipeline-figure.svg){.absolute width="650"}
:::
::::

## {background-image="./assets/HyperSpectralInfoGraphic.png" background-size="contain"}


##  {.smaller}

**Application: Supervised Machine Learning for Estimation of Chemicals-of-Concern**

::::{.columns}
::: {.column width="50%"}
- $>3$ Tb of HSI captured by drone for entire pond
- Boat provides in-situ reference measurements
- Collections from 3 different days
- **Goal 1**: Train a ML model to map HSI spectra to chemical concentrations
- **Goal 2**: Use model to produce wide-area map of concentrations in entire pond
- Utilize a *super-learner* approach combining predictions of multiple individual ML learners[^1]

[^1]: See [@wolpert-stacked] for stacked generalization method


:::
::: {.column width="50%"}

![](./assets/robot-team/CO_dataMap.png){.absolute top="50" width="600"}
![](./assets/robot-team/marginal-hist.png){.absolute top="425" width="400"}

:::
::::

##
**Example model fit for CDOM:**
![](./assets/robot-team/cdom-scatterplot.png){.absolute top="200" left="-100" width="600"}
![](./assets/robot-team/cdom-qqplot.png){.absolute top="200" left="600" width="600"}

##

![](./assets/robot-team/cdom-importance.png)


## {background-image="./assets/robot-team/CrudeOil-CDOM-Maps.png" background-size="contain"}


## Uncertainty Quantification: Conformal Prediction {.smaller}

:::: {.columns}
::: {.column width="50%"}

- By further partitioning our data into distinct $D_{\text{train}}, D_{\text{test}}, D_{\text{cal}}$ sets we can utilize conformal prediction to generate robust, distribution free, confidence intervals for our ML predictions
- Conformal prediction (CP) is model agnostic
- By using the $D_{\text{cal}}$ holdout set we can calibrate a heuristic uncertainty score like the residual error $\lvert y - y_{\text{pred}}\rvert$ into a suitable confidence interval with coverage $\alpha$.[^2]

[^2]: [@conformal-prediction]



:::
::: {.column width="50%"}
![](./assets/robot-team/conformal-prediction.gif)
:::
::::


## Application: Unsupervised Classification {.smaller}

::::{.columns}
:::{.column width="50%"}
- A common approach to reflectance modeling for HSI imagery is *spectral unmixing* using a combination of endmember spectra[^3]
- **Goal:** use unsupervised ML techniques to *discover* endmembers, i.e. *Is there something unexpected in the water?*
- Utilize *Self Organizing Maps* and *Generative Topographic Maps* for interpretable classes
- Demonstrate application for Rhodamine dye plume

[^3]: [@spectral-unmixing]

:::
:::{.column width="50%"}
![](./assets/robot-team/boat-and-dye.png){.absolute top="90" left="650" width="400"}
![](./assets/robot-team/SOM_demo.svg){.absolute top="350" width="400"}
![](./assets/robot-team/som-diagram.svg){.absolute top="350" left="870" width="400"}
:::
::::

## Summary & Next Steps {.smaller}

:::: {.columns}
::: {.column width="50%"}
Code Written: 

- https://github.com/john-waczak/RobotTeam.jl
- https://github.com/mi3nts/mintsML.jl
- https://github.com/john-waczak/SolarGeometry.jl
- https://github.com/john-waczak/SelfOrganizingMaps.jl
- https://github.com/john-waczak/GenerativeTopographicMapping.jl

:::
::: {.column width="50%"}
![](./assets/robot-team-table.png){.absolute left="600" width="500"}
:::
::::

# Project 2: MINTS Air Quality Network  {background-image="./assets/sharedair-site.gif"}

## {.smaller}

**Guiding Question: How can we utilize time series data from low-cost AQ monitors to produce actionable insights?**

:::: {.columns}
::: {.column width="55%"}

- reference monitors range in price from the order of \$10,000 to \$100,000 and more.[^4]
- EPA guidelines for criteria pollutants are set at 8 and 24 hour averages.[^5]
- However PM levels display high spatio-temporal variability meaning 24 hr averages mask acute exposures
- Price of reference instruments is prohibitive
- **Need**: A dense network of low-cost air quality monitors with high sampling rates

[^4]: Source: [@epa-low-cost]

[^5]: Source: [@naaqs]

:::
::: {.column width="45%"}

![](./assets/air-network/dallas-aq-article.png){.absolute top="100" width="300"}
![](./assets/air-network/dallas-aq-article-2.png){.absolute top="100" left="900" width="350"}
![](./assets/air-network/pm-averaging.png){.absolute top="500" width="600"}

:::
::::

## Physical Sensing: Sensors / Network

:::: {.columns}
::: {.column width="50%"}

![](./assets/air-network/sensor-hierarchy.png)
:::
::: {.column width="50%"}

![](./assets/air-network/central-node.png){.absolute top="125" left="600" width="300"}
![](./assets/air-network/lora-node.png){.absolute top="150" left="900" width="300"}
![](./assets/air-network/lora-nodes-calibration.png){.absolute top="475" left="0" width="400"}

:::
::::

## Data Access {.smaller}
**Containerized Data Pipeline for Real Time Processing & Visualization**

:::: {.columns}
::: {.column width="50%"}
- Open source containerized tools provide a flexible, maintainable, and reproducible data backend
- **NodeRed**: processing of real time data streams
- **InfluxDB**: time series database for high cardinality data
- **Grafana**: Real time visualization and dashboarding
- **Quarto**: A literate programming tool for reproducible documentation
- **OSN**: long term, open access data storage in S3 buckets

:::
::: {.column width="50%"}

![](./assets/air-network/docker-elements.png){.absolute width="350"}
![](./assets/air-network/osn-logo.jpg){.absolute top="550" width="400"}

:::
::::

## {background-video="./assets/air-network/dashboards-clip.mp4" background-video-loop="true" background-video-muted="true"}

<!-- ![](./assets/air-network/dashboards-clip.mp4) -->



## Data Usability: Uncertainty Quantification for Low-Cost Sensors {.smaller}

:::: {.columns}
::: {.column width="50%"}

- For the low-cost sensor data to be *usable* we need to provide both measurements *and* uncertainty estimates
- Low-cost sensors like our IPS7100 (PM) and BME680 (temp, press, etc) tend to have highly conservative uncertainty estimates to protect the manufacturer
- We need tools to asses sensor uncertainty from the time series data themselves
:::

::: {.column width="50%"}

![](./assets/air-network/pm-timeseries.png)

:::
::::


## {.smaller}

:::: {.columns}
::: {.column width="50%"}
- **Representativeness**: compute standard deviation & mean absolute deviation over a rolling window
- **Intrinsic** utilize a temporal variogram to assess variance at a measurement lag of 0 seconds.
- Temporal semi-variogram for time series $Z(t)$ is defined as $\gamma(\Delta t) = \frac{1}{2}\text{Var}\Big(Z(t+\Delta t)-Z(t)\Big)$
- We estimate the *empirical variogram* as
\begin{equation}
    \hat{\gamma}(\Delta t) = \frac{1}{2N}\sum_{i=1}^{N}\Big[ Z(t_i + \Delta t) - Z(t_i) \Big]^2
\end{equation}
- We then model $\hat{\gamma}(\Delta t)$ and extrapolate to 0 to obtain the *nugget*
:::
::: {.column width="50%"}
![](./assets/air-network/variogram.png)

- The nugget is half the expected variance between samples taken at the same time. If there were no intrinsic uncertainty, this would be 0.
- I've written a Julia package to rapidly compute $\hat{\gamma}$, fit a variety of variogram models, and compute the resulting nugget.
:::
::::


## Actionable Insights: Physics-Based Time Series Modeling with ML

- Can we identify acute pollution events distinctly from background diurnal variation?
- Can we construct short-term (10-30 min) using data available from a low-cost sensor?
- My approach: Hankel Alternative View of Koopman (HAVOK)[^6] + Universal Differential Equations[^7]

[^6]: [@havok]

[^7]: [@ude-paper]



## {.smaller}

:::: {.columns}
::: {.column width="50%"}
- Koopman operator theory describes the time evolution of observables defined on dynamical systems
- Dynamic Mode Decomposition estimates the Koopman operator using matrix methods
- HAVOK combines DMD with the identification of external forcing to produce a model of the form
\begin{equation}
    \frac{d}{dt}\mathbf{v}(t) = A\mathbf{v}(t) + \mathbf{b}v_r(t)
\end{equation}
- The resulting model on the embedded coordinates $v_i(t)$ can be inverted to reconstruct the original time series
- I have implemented this technique to model our time series data

:::
::: {.column width="50%"}

![](./assets/air-network/havok_pred_x.png){.absolute top="-35" width="500"}
![](./assets/air-network/v1_forcing_identified.png){.absolute top="325" width="500"}
:::
::::

## {.smaller}

:::: {.columns}
::: {.column width="50%"}
- The forcing function does a good job at identifying pollution events
- The model integrates well for ~1-2 hours. Beyond this, errors begin to accumulate
- Clearly the "Mostly Linear" assumption is not perfect.
- Approach: Fit missing nonlinear terms using a Neural Network
\begin{equation}
    \frac{d}{dt}\mathbf{v}(t) = A\mathbf{v}(t) + \text{NN}(\mathbf{v},t) + \mathbf{b}v_r(t)
\end{equation}
- Use SINDy / Symbolic regression to identify the function form of the missing dynamics
:::
::: {.column width="50%"}

![](./assets/air-network/timeseries_reconstructed_embedding.png)
![](./assets/air-network/attractor_w_forcing.png){.absolute top="400" width="450"}
:::
::::


## Summary & Next Steps {.smaller}

:::: {.columns}
::: {.column width="50%"}
::: {style="font-size: 85%;"}
Code Written:

- https://github.com/mi3nts/AirQualityAnalysisWorkflows
- https://github.com/mi3nts/OSN-sync
- https://github.com/john-waczak/TimeSeriesTools.jl
- https://github.com/john-waczak/TimeSeriesAnalysis

:::
:::
::: {.column width="50%"}

![](./assets/air-quality-network-table.png){.absolute left="600" width="500"}

:::
::::

# Project 3: Chemical Data Assimilation for Indoor Air Quality

## Motivation {.smaller}


:::: {.columns}
::: {.column width="55%"}

- Humans spend > 90% of their time indoors[^8]
- Construction materials, furnishings, personal care products, household cleaners, etc. all contribute to the pot pourri of indoor air
- Many household products contain chemicals which can react with contaminants to form harmful secondary products[^9]
- Example: Terpenes in citrus based cleaners can react with Ozone to produce Formaldehyde (a carcinogen)
- To understand Indoor Air Quality we need to understand the chemical dynamics at play

[^8]: [@pollution1989report]

[^9]: [@nazaroff2004cleaning]

:::
::: {.column width="45%"}
![](./assets/chemical-data-assimilation/nyt-aq-article.png){.absolute top="0" width="400"}
![](./assets/chemical-data-assimilation/aq-article-2.png){.absolute top="250" width="400"}
:::
::::


## Physical Sensing: Reference Instruments {.smaller}
:::: {.columns}
::: {.column width="50%"}
::: {style="font-size: 85%;"}
- Building a air quality testing laboratory in collaboration with ActivePure
- Suite of reference grade instruments including
  - Aerosol Mass Spectrometer
  - Selected-ion flow-tube mass spectrometer (syft)
  - Individual gas spectrometers
  - Irradiance spectrometers (for photolysis)
- Automated instrument data acquisition and networking
- Processing and Storage Pipeline (NodeRed + InfluxDB + Grafana)
:::
:::
::: {.column width="50%"}
![](./assets/chemical-data-assimilation/LabOverview-noap.png)
:::
::::

## Characterization of Indoor Photolysis {.smaller}

:::: {.columns}
::: {.column width="50%"}

- Photolysis is the process whereby molecular bonds are broken by incident photons
- Photolysis rates are characterized by the incident irradiance $I$, the molecule's absorption cross section $\sigma$, and the quantum yield $\phi$
- To understand indoor air chemistry and it's impact on indoor air quality, we must identify the relevant photolysis reactions at play
- Indoor lighting consists of a variety of light source with different spectral features

:::
::: {.column width="50%"}
![](./assets/photolysis-infographic.png)
:::
::::

## {.smaller}

:::: {.columns}
::: {.column width="50%"}
- Cross section and quantum yield data (>8000 data files) scraped from MPI-Mainz UV/VIS Spectral Atlas of Gaseous Molecules of Atmospheric Interest
- Developed a Gaussian Process Regression code to fit resulting data and interpolate
- Measurements using a Ocean Optics spectrometer provide data for $I(\lambda)$ under a variety of lighting conditions at 1 hz sample rate
- Photolysis rates are then estimated by quadrature
- **Example**: GPR fit for Ozone absorption cross section
:::
::: {.column width="50%"}

![](./assets/chemical-data-assimilation/photolysis/cross-section/o3-data.svg)
![](./assets/chemical-data-assimilation/photolysis/cross-section/o3-gpr-scatter.svg)

:::
::::

##

![](./assets/chemical-data-assimilation/photolysis/J_1.png){.absolute left="200" width="600"}


## {.smaller}
### Chemical Mechanism & Data Assimilation

:::: {.columns}
::: {.column width="50%"}
::: {style="font-size: 70%;"}
- **Goal 1:** Utilized reference instruments + Photolysis rates to model indoor chemical kinetics
- **Goal 2:** Use data assimilation to infer concentrations of reactive/trace species below detection limits
- I have implemented two detailed chemical mechanisms in the Julia programming language
  1. AutoChem: originally developed by Dr. Lary at NASA (includes ion chemistry)[^10]
  2. Master Chemical Mechanism: benchmark mechanism in atmospheric chem. with >5,000 species and >16,000 reactions[^11]
- `DifferentialEquations.jl` offers cutting-edge optimized ODE solvers for *stiff* systems
- Given a set of reactions, my code automatically generates reaction rates, derivative functions, the Jacobian, etc.
- Using *data assimilation* we can infer the abundance of reactive species like OH and other trace gasses that are below instrument detection limits

:::
:::
::: {.column width="50%"}
Elementary bimolecular, trimolecular and photolysis reactions:
\begin{align}
\mathrm{A} + \mathrm{B} &\longrightarrow \text{Products} \\
\mathrm{A} + \mathrm{B} + \mathrm{M} &\longrightarrow \text{Products} \\
\mathrm{A} + h\nu &\longrightarrow \text{Products}
\end{align}

All elementary reactions taken together form a system whose dynamics are described by a set of coupled, stiff ODES: 
\begin{equation}
  \begin{cases}
    \dfrac{d{u}_i}{dt} = -\sum_j r_jS_{ij} \\
    r_j = k_j\prod\limits_{\ell}^{S_{\ell j}>0} u_{\ell}^{S_{ij}}
  \end{cases}
\end{equation}

[^10]: [@autochem]
[^11]: [@mcm]

:::
::::


##  4d-var {.smaller}
\begin{equation}
    J(u_0) = \frac{1}{2}\left( u_0 - u_0^{(b)} \right)^TB^{-1}\left( u_0 - u_0^{(b)} \right) + \frac{1}{2}\sum_k\left(w_k - h(u_k) \right)^TR_k^{-1}\left(w_k - h(u_k) \right) \\
\end{equation}


:::: {.columns}
::: {.column width="50%"}
- 4 Dimensional Variational Data Assimilation (4d-var) allows us to find the optimal initial conditions $u_0$ for the chemical mechanism using collected measurements and their associated uncertainties
- I have implemented the technique in Julia utilizing the advanced `DifferentialEquations.jl` package together with automatic differentiation of the ODE solution vector using `SciMLSensitivity.jl`

:::
::: {.column width="50%"}
![](./assets/chemical-data-assimilation/assimilation/4d-var/losses.png)
:::
::::


## EKF

:::: {.columns}
::: {.column width="60%"}
::: {style="font-size: 50%;"}

- Using an Extended Kalman Filter utilize our measurements to dynamically update the kinetics model
- Measurements $w_k$ and their associated uncertainties $R_k$ are compared against forecasted quantities and their associated uncertainties
- This information allows us to compute an update filter $K_k$ which course-corrects the model
- Information from these measurements propagates to unobserved species allow us to model unobserved species with uncertainty estimates

Forecasting step:
\begin{align}
    u_k^{(b)} &= \mathcal{M}(u_{k-1}^{(a)}) \\
    B_k &= D_M(u_{k-1}^{(a)})P_{k-1}D_M^T(u_{k-1}^{(a)}) + Q_k
\end{align}

Assimilation step:
\begin{align}
    K_k &= B_kD_h^T(u_k^{(b)})\left[ D_h(u_k^{(b)})B_kD_h^T(u_k^{(b)}) + R_k \right]^{-1}\\
    u_k^{(a)} &= u_k^{(b)} + K_k(w_k - h(u_k^{(b)})) \\
    P_k &= \left( I - K_kD_h(u_k^{(b)}) \right)B_k
\end{align}

:::
:::
::: {.column width="40%"}
![](./assets/chemical-data-assimilation/assimilation/EKF/h2o2.png){.absolute top="0" left="700" width="350"}
![](./assets/chemical-data-assimilation/assimilation/EKF/oh.png){.absolute top="350" left="700" width="350"}
:::
::::



## Summary & Next Steps {.smaller}

:::: {.columns}
::: {.column width="50%"}
::: {style="font-size: 85%;"}
Code written:

- https://github.com/john-waczak/activePure_measurement_software
- https://github.com/john-waczak/AP-labs-measurement-analyses
- https://github.com/john-waczak/MLJGaussianProcesses.jl
- https://github.com/john-waczak/Photolysis.jl
- https://github.com/john-waczak/AutoChem.jl
:::
:::
::: {.column width="50%"}
![](./assets/chemical-data-assimilation-table.png){.absolute left="600" width="450"}
:::
::::

## Thank you for listening!

:::: {.columns}

::: {.column width="33.3%"}
![](./assets/robot-team-table.png)
:::

::: {.column width="33.3%"}
![](./assets/air-quality-network-table.png)
:::

::: {.column width="33.3%"}
![](./assets/chemical-data-assimilation-table.png)
:::

::::


# Extras

## Solar Geometry and Illumination

![](./assets/extras/solar-geometry.png){.absolute left="0" width="300"}
![](./assets/extras/lambertian.png){.absolute left="400" width="600"}
![](./assets/extras/cosine-law.png){.absolute top="400" left="0" width="300"}


##
### Gaussian Process Regression

::: {style="font-size: 50%;"}
\begin{equation}
  \begin{bmatrix} \mathbf{f} \\ \mathbf{f}_* \end{bmatrix} \sim \mathcal{N}\left(\mathbf{0},\begin{bmatrix} K(X,X)-\sigma_n^2I & K(X,X_*) \\ K(X_*,X) & K(X_*,X_*) \end{bmatrix}\right)
\end{equation}

\begin{equation}
  \boxed{p(\mathbf{f}_* \vert X_*, X, \mathbf{y}) = \mathcal{N}\left( K_*^T\left[K + \sigma_n^2 I\right]^{-1}\mathbf{f},\; K_{**}-K_*^T\left[K + \sigma_n^2 I\right]^{-1}K_*\right)}
\end{equation}
:::

![](./assets/extras/hpo-fit.svg)


## Reaction Rate Coefficient Functions

\begin{equation}
    k(T,P) = A(T,P)\exp(-E_n/k_B T)
\end{equation}

\begin{equation}
k_{\text{photolysis}} = J = \int I(\lambda)\sigma(\lambda, T)\Phi(\lambda, T)d\lambda
\end{equation}


## Taken's embedding theorem

- Taken's embedding theorem[^12]: If a dynamical system $f:\mathcal{M}\to\mathcal{M}$ has an attractor of box counting dimension $d$ then *there exists* a $k\geq 2d$ such that the embedding $\mathbf{y}:\mathcal{M}\to\mathbb{R}^{k}$ where
\begin{equation}
\mathbf{y}(x) = \left(y(x), y(f(x)), y(f^2(x)), ..., y(f^{k-1}(x)) \right)
\end{equation}
is a diffeomorphism.

[^12]: [@takens-theorem]


## Koopman Operator Theory {.smaller}

For a discrete dynamical system defined by $u_k = f(u_{k-1})$ an observable is a function $y(u_k)\in\mathbb{R}$. We can define an operator $\mathcal{K}$ such that 
\begin{equation}
    K[y(u_k)] = y(f(u_k)) = y(u_{k+1})
\end{equation}
Then the dynamics of the observable $y$ can be written using $\mathcal{K}$ as 
\begin{equation}
    y_k = \mathcal{K}^k(u_0) = y(f^{k}(u_0))
\end{equation}
which is a *linear equation*. The trick is then to try to estimate the operator $\mathcal{K}$ which could require an infinite dimensional basis.

## Hankel Matrix for a Time Series

\begin{equation}
  H = \begin{bmatrix}
    y_1 & y_2 & ... & y_p \\
    y_2 & y_3 & ... & y_{p+1} \\
    \vdots & \vdots & \ddots & \vdots \\
    y_q & y_{q+1} & ... & y_{p+q}
    \end{bmatrix}
\end{equation}

\begin{equation}
  H = \begin{bmatrix}
    y_1 & \mathcal{K}(y_1) & ... & \mathcal{K}^{p-1}(y_1) \\
    \mathcal{K}(y_1) & \mathcal{K}^2(y_1) & ... & \mathcal{K}^p(y_1) \\
    \vdots & \vdots & \ddots & \vdots \\
    \mathcal{K}^{q-1}(x_1) & \mathcal{K}^q(x_1) & ... & \mathcal{K}^{p+q-1}(x_1)
    \end{bmatrix}
\end{equation}


## Methane Mechanism

![](./assets/extras/methane-mechanism.png)


## Super Learners & Data Hygiene {.smaller}

1. Data is split into $k$ folds. Each base learner is trained on $k-1$ folds and makes out-of-bag predictions on the $k$ fold (repeated for each fold)
2. Super learner is trained on these predictions
3. Finally, base learners are retained on full dataset

![](./assets/extras/super-learner.png)


## References



